var m = make(map[string]int)
fmt.Println(m)

m["route"] = 66
m["route2"] = 67
fmt.Println(m)

// i := m["route"]

mapLength := len(m)
fmt.Println(mapLength)

// fmt.Println(m)
// delete(m, "route")
// fmt.Println(m)

for key, value := range m {
	fmt.Println("Key:", key, "Value:", value)
}

commits := map[string]int{
	"rsc": 3711,
	"r":   2138,
	"gri": 1908,
	"adg": 912,
}
fmt.Println(commits)

m2 := map[string]int{}
m2["key1"] = 99
fmt.Println(m2)


sampleMap := map[string]int{}
fmt.Println(sampleMap)

sampleMap["a"] = 1
fmt.Println(sampleMap)

sampleMap2 := map[string]int{
	"aa": 100,
	"ab": 99,
}
fmt.Println(sampleMap2)

// loop range
for key, value := range sampleMap2 {
	fmt.Printf("%v is %d years old\n", key, value)
}

// delete
delete(sampleMap2, "ab")
fmt.Println(sampleMap2)

if value, ok := sampleMap2["aa"]; ok {
	fmt.Printf("The value %v is present\n", value)
	fmt.Println(ok) //This will print "true"
} else {
	fmt.Println("We could not find that key")
}